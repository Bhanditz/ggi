- mammalia = Node.get('mammalia').json
- human = Node.get('human').json
-# the taxonomy browser will use the FALO classification WEB-5186, WEB-5183
.browser_column
  %ul.hierarchy--root
    %li.hierarchy__item
      A
    %li.hierarchy__item
      B
    %li.hierarchy__item.hierarchy__item--open
      = mammalia["scientificName"]
      %ul.hierarchy
        %li.hierarchy__item.hierarchy__item--low_score
          CXX
        %li.hierarchy__item
          CYY
        %li.hierarchy__item.hierarchy__item--high_score
          CZZ
          %ul.hierarchy
            %li.hierarchy__item.hierarchy__item--high_score
              = human["scientificName"]
    %li.hierarchy__item.hierarchy__item--high_score
      D
    %li.hierarchy__item.hierarchy__item--low_score
      E
    %li.hierarchy__item
      F
  .browser_tools
    %ul
      %li.browser_tools__tool Expand All
      %li.browser_tools__tool Collapse All
.scores_column
  .legend
    Legend
  -# attributes and values for the GGI data will be extracted from EOL TraitBank WEB-5186
  %table.scores
    %thead
      %tr.scores__headers
        %th.scores__score_header Source
        %th.scores__score_header Value
        %th.scores__score_header Score
    %tbody
      - human["measurements"].each do |measurement|
        - score = measurement["score"].to_f
        - klass = nil # TODO - how do we know what's high and low from here?!
        %tr.scores__score_row
          %td.scores__source= measurement["label"].sub("number of ", '') # TODO ... how are we expected to do this label?
          %td.scores__value= measurement["measurementValue"]
          %td.scores__score{class: klass}= measurement["score"]

      - scores = { NCBI: :high, BHL: :low, CBOL: nil, TOL: nil }
      - scores.keys.each do |source|
        %tr.scores__score_row
          %td.scores__source= source
          %td.scores__value X
          %td.scores__score{class: scores[source].nil? ? nil : "#{scores[source]}_score"} Y

.info_column
  -# Not sure if this is really a "list"...
  .info_column__breadcrumb= human["ancestors"].map { |ancestor| ancestor["scientificName"] }.join(' > ')
  .info_column__latin_name= human["scientificName"]
  .info_column__common_name= human["vernacularNames"].find { |n| n.has_key?("eol_preferred") && n["eol_preferred"] == true }["vernacularName"]
  .info_column__family_count
    %dt.info_stat # of Families:
    %dd.info_val= human["number_of_families"]
  .info_column__source
    %dt.info_stat Source:
    %dd.info_val= human["namePublishedIn"]
  .info_column__score
    %dt.info_stat Total Score:
    %dd.info_val= human["ggiTotalScore"]
  .info_column__picture
    %img{src: human["bestImage"]["eolThumbnailURL"]}
